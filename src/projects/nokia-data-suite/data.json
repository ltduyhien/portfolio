{
  "title": "Enterprise data analytics platform for network operators and service providers.",
  "subtext": "Nokia Data Suite at Nokia",
  "slug": "nokia-data-suite",
  "banner": "header.png",
  "screenshots": [
    {
      "image": "prototype-use-cases-management.png",
      "caption": "Use cases management dashboard, keeping track of use cases status and progress"
    },
    {
      "image": "prototype-create-new.png",
      "caption": "Step-by-step use case creation workflow and configuration process"
    },
    {
      "image": "prototype-drag-drop.png",
      "caption": "Drag-and-drop interface for data processing and workflow configuration"
    },
    {
      "image": "prototype-code-editor.png",
      "caption": "Custom code configuration for each node"
    }
  ],
  "appendices": [],
  "timeSpent": "Project Length: **8 Months**",
  "role": "**Senior UX Designer**",
  "industries": ["Network Analytics", "AI/ML", "5G", "SaaS"],
  "productName": "Nokia Data Suite",
  "summary": "Nokia Data Suite is a low-code analytics platform designed specifically for Services Engineers to create and manage data use cases. The platform addresses the heavy customization workload that services teams face when working with different customers, providing a standardized workflow while maintaining the flexibility needed for customer-specific requirements. The project focused on streamlining the use case creation process and improving team collaboration.\n\nThe project was delivered in two phases: Research & Design (4 months) and Prototype Development & Prototype Testing (4 months).",
  "problem": "**Services Engineer Workflow Challenges**\n\nServices Engineers faced significant challenges in customizing analytics use cases for different customers. Each customer required separate implementation due to slightly different requirements, creating a heavy workload for services teams. The deployment process was not straightforward, and teams lacked proper knowledge sharing mechanisms.\n\n**Key Challenges:**\n- **Customization Overhead:** Each customer required separate use case implementation\n- **Deployment Complexity:** Long deployment times and non-standardized processes\n- **Team Isolation:** Services teams were scattered with limited communication\n- **Knowledge Sharing:** No access to other teams' configurations or shared repositories\n- **Technical Depth:** Customization required deep technical and domain knowledge",
  "collaboration": "**Design Team Collaboration**\n\nI worked as a Senior UX Designer in a design team of 4 members, collaborating closely with the software architect to ensure technical feasibility and implementation alignment.\n\nOur team conducted user research with 8 Services Engineers across different regions to understand their daily workflows, pain points with customization processes, and collaboration challenges. We mapped their journey from pre-sales support through deployment and ongoing maintenance, identifying key pain points in the use case creation and deployment process. The research revealed the need for better knowledge sharing between scattered services teams and more efficient use case creation workflows.",
  "keyDecisions": [
    "**NOA Studio Low-code Environment:** Created a low-code platform for Services Engineers to view and create Analytics use cases, allowing users to edit existing cases or build new ones based on templates, compile changes into updated resource files, and merge them into the master branch for deployment",
    "**Drag-drop UI for Data Processing:** Implemented an intuitive drag-and-drop interface for data processing and integration workflows",
    "**Anomaly Detection Training:** Integrated machine learning capabilities for anomaly detection model training as one of the data processing services",
    "**Revision Switching for Version Control:** Implemented revision switching capabilities for version control when drafting use cases, enabling users to manage different versions and track changes throughout the development process",
    "**Team Knowledge Sharing:** Designed shared repository access and configuration sharing between services teams to reduce duplication and improve collaboration"
  ],
  "outcomes": "The Nokia Data Suite platform streamlined the Services Engineer workflow for creating and managing analytics use cases.\n\n**Workflow Improvements:**\n\n- **Reduced Customization Time:** Before this low‑code solution, Services Engineers manually collected and processed data and coordinated across multiple departments, which added significant time and effort. Standardized templates and drag‑drop workflows now cut this overhead and introduce a new way of working that lifts productivity to another level\n- **Improved Team Collaboration:** **Shared repository access** enables teams to reuse configurations and reduce duplicate work\n- **Streamlined Deployment:** **Standardized deployment process** reduced deployment time from days to hours\n- **Better Knowledge Sharing:** Teams can now access and modify each other's configurations, improving cross-team learning\n\n**Technical Metrics:**\n\n- **Platform Performance:** Processes customer network data with configurable update intervals\n- **Scalability:** Successfully deployed across multiple customer environments\n- **User Satisfaction:** Services Engineers reported **4.2/5** rating for ease of use and workflow efficiency\n- **Team Adoption:** **70%** of services teams adopted the platform in the first beta release\n\nThe project successfully addressed the core challenges Services Engineers faced in customization and team collaboration, creating a more efficient workflow for customer-specific analytics implementations.",
  "outcomesImages": [
    {
      "image": "test-planning.png",
      "caption": "Comprehensive testing strategy and validation framework"
    }
  ],
  "constraints": "**Enterprise Integration & Compliance Requirements**\n\nThe Nokia Data Suite needed to integrate seamlessly with existing enterprise infrastructure while meeting strict compliance requirements for telecommunications data. The platform had to handle real-time processing of large-scale network data while maintaining security and performance standards.\n\n**Technical Constraints:**\n- Integration with legacy enterprise systems\n- Real-time data processing requirements\n- Security and compliance standards\n- Scalability across multiple deployment environments\n- Performance optimization for large datasets",
  "ideation": "**Research & Ideation Process**\n\nOur design process began with understanding the Services Engineer workflow and pain points:\n\n**User Research:**\n- Conducted interviews with Services Engineers to understand their daily workflows\n- Analyzed the customization process for different customers and identified bottlenecks\n- Mapped the journey from pre-sales support through deployment and maintenance\n- Identified team collaboration challenges and knowledge sharing gaps\n\n![Interviewing with users who are network operators, data analysts, and business managers](research-interview.png)\n\n**Technical Analysis:**\n- Evaluated existing use case creation and deployment processes\n- Analyzed the technical requirements for customer-specific customizations\n- Identified opportunities for standardization while maintaining flexibility\n- Assessed integration needs with existing customer environments\n\n![Technical analysis and architecture evaluation](technical-ideation.png)\n\n**Ideation Workshops:**\n- Facilitated sessions with Services Engineers to co-design the workflow\n- Brainstormed solutions for team collaboration and knowledge sharing\n- Explored low-code approaches to reduce technical barriers\n- Defined success metrics focused on workflow efficiency and team adoption\n\n![Ideation workshops with cross functional teams](ideation.png)"
} 